// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test/base/webserver.proto

#include "test/base/webserver.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace protobuf_test_2fbase_2fwebserver_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_2fbase_2fwebserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Web_Debug_TestMapEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_2fbase_2fwebserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Web_Monitor_Prometheus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_2fbase_2fwebserver_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Web_Net;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_2fbase_2fwebserver_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Web_Debug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_2fbase_2fwebserver_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Web_Grpc;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_2fbase_2fwebserver_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Web_Http;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_2fbase_2fwebserver_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Web_Monitor;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_test_2fbase_2fwebserver_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Web;
}  // namespace protobuf_test_2fbase_2fwebserver_2eproto
namespace go {
namespace pkg {
namespace webserver {
class WebConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WebConfig>
      _instance;
} _WebConfig_default_instance_;
class Web_NetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Web_Net>
      _instance;
} _Web_Net_default_instance_;
class Web_GrpcDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Web_Grpc>
      _instance;
} _Web_Grpc_default_instance_;
class Web_HttpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Web_Http>
      _instance;
} _Web_Http_default_instance_;
class Web_Debug_TestMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Web_Debug_TestMapEntry_DoNotUse>
      _instance;
} _Web_Debug_TestMapEntry_DoNotUse_default_instance_;
class Web_DebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Web_Debug>
      _instance;
} _Web_Debug_default_instance_;
class Web_Monitor_PrometheusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Web_Monitor_Prometheus>
      _instance;
} _Web_Monitor_Prometheus_default_instance_;
class Web_MonitorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Web_Monitor>
      _instance;
} _Web_Monitor_default_instance_;
class WebDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Web>
      _instance;
} _Web_default_instance_;
}  // namespace webserver
}  // namespace pkg
}  // namespace go
namespace protobuf_test_2fbase_2fwebserver_2eproto {
static void InitDefaultsWebConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::pkg::webserver::_WebConfig_default_instance_;
    new (ptr) ::go::pkg::webserver::WebConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::pkg::webserver::WebConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WebConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWebConfig}, {
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web.base,}};

static void InitDefaultsWeb_Net() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::pkg::webserver::_Web_Net_default_instance_;
    new (ptr) ::go::pkg::webserver::Web_Net();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::pkg::webserver::Web_Net::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Web_Net =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWeb_Net}, {}};

static void InitDefaultsWeb_Grpc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::pkg::webserver::_Web_Grpc_default_instance_;
    new (ptr) ::go::pkg::webserver::Web_Grpc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::pkg::webserver::Web_Grpc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Web_Grpc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWeb_Grpc}, {
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,}};

static void InitDefaultsWeb_Http() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::pkg::webserver::_Web_Http_default_instance_;
    new (ptr) ::go::pkg::webserver::Web_Http();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::pkg::webserver::Web_Http::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Web_Http =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWeb_Http}, {
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,}};

static void InitDefaultsWeb_Debug_TestMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::pkg::webserver::_Web_Debug_TestMapEntry_DoNotUse_default_instance_;
    new (ptr) ::go::pkg::webserver::Web_Debug_TestMapEntry_DoNotUse();
  }
  ::go::pkg::webserver::Web_Debug_TestMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Web_Debug_TestMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWeb_Debug_TestMapEntry_DoNotUse}, {}};

static void InitDefaultsWeb_Debug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::pkg::webserver::_Web_Debug_default_instance_;
    new (ptr) ::go::pkg::webserver::Web_Debug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::pkg::webserver::Web_Debug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Web_Debug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWeb_Debug}, {
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Debug_TestMapEntry_DoNotUse.base,}};

static void InitDefaultsWeb_Monitor_Prometheus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::pkg::webserver::_Web_Monitor_Prometheus_default_instance_;
    new (ptr) ::go::pkg::webserver::Web_Monitor_Prometheus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::pkg::webserver::Web_Monitor_Prometheus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Web_Monitor_Prometheus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWeb_Monitor_Prometheus}, {}};

static void InitDefaultsWeb_Monitor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::pkg::webserver::_Web_Monitor_default_instance_;
    new (ptr) ::go::pkg::webserver::Web_Monitor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::pkg::webserver::Web_Monitor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Web_Monitor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWeb_Monitor}, {
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Monitor_Prometheus.base,}};

static void InitDefaultsWeb() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::pkg::webserver::_Web_default_instance_;
    new (ptr) ::go::pkg::webserver::Web();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::pkg::webserver::Web::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_Web =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsWeb}, {
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Net.base,
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Grpc.base,
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Http.base,
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Debug.base,
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Monitor.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_WebConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Web_Net.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Web_Grpc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Web_Http.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Web_Debug_TestMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Web_Debug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Web_Monitor_Prometheus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Web_Monitor.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Web.base);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::WebConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::WebConfig, web_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Net, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Net, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Net, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Grpc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Grpc, max_concurrency_unary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Grpc, max_concurrency_stream_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Grpc, max_receive_message_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Grpc, max_send_message_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Grpc, timeout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Http, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Http, api_formatter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Http, max_concurrency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Http, timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Debug_TestMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Debug_TestMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Debug_TestMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Debug_TestMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Debug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Debug, enable_profiling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Debug, disable_print_inoutput_methods_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Debug, test_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Monitor_Prometheus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Monitor_Prometheus, enabled_metric_timer_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Monitor_Prometheus, enabled_metric_code_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Monitor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web_Monitor, prometheus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web, bind_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web, grpc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web, http_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web, debug_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::go::pkg::webserver::Web, monitor_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::go::pkg::webserver::WebConfig)},
  { 6, -1, sizeof(::go::pkg::webserver::Web_Net)},
  { 13, -1, sizeof(::go::pkg::webserver::Web_Grpc)},
  { 23, -1, sizeof(::go::pkg::webserver::Web_Http)},
  { 31, 38, sizeof(::go::pkg::webserver::Web_Debug_TestMapEntry_DoNotUse)},
  { 40, -1, sizeof(::go::pkg::webserver::Web_Debug)},
  { 48, -1, sizeof(::go::pkg::webserver::Web_Monitor_Prometheus)},
  { 55, -1, sizeof(::go::pkg::webserver::Web_Monitor)},
  { 61, -1, sizeof(::go::pkg::webserver::Web)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::pkg::webserver::_WebConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::pkg::webserver::_Web_Net_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::pkg::webserver::_Web_Grpc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::pkg::webserver::_Web_Http_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::pkg::webserver::_Web_Debug_TestMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::pkg::webserver::_Web_Debug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::pkg::webserver::_Web_Monitor_Prometheus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::pkg::webserver::_Web_Monitor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::pkg::webserver::_Web_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "test/base/webserver.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031test/base/webserver.proto\022\020go.pkg.webs"
      "erver\032\036google/protobuf/duration.proto\"/\n"
      "\tWebConfig\022\"\n\003web\030\001 \001(\0132\025.go.pkg.webserv"
      "er.Web\"\200\010\n\003Web\022/\n\014bind_address\030\001 \001(\0132\031.g"
      "o.pkg.webserver.Web.Net\022(\n\004grpc\030\003 \001(\0132\032."
      "go.pkg.webserver.Web.Grpc\022(\n\004http\030\004 \001(\0132"
      "\032.go.pkg.webserver.Web.Http\022*\n\005debug\030\n \001"
      "(\0132\033.go.pkg.webserver.Web.Debug\022.\n\007monit"
      "or\030\013 \001(\0132\035.go.pkg.webserver.Web.Monitor\032"
      "!\n\003Net\022\014\n\004host\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\032\262\001\n\004G"
      "rpc\022\035\n\025max_concurrency_unary\030\001 \001(\005\022\036\n\026ma"
      "x_concurrency_stream\030\002 \001(\005\022 \n\030max_receiv"
      "e_message_size\030\003 \001(\005\022\035\n\025max_send_message"
      "_size\030\004 \001(\005\022*\n\007timeout\030\005 \001(\0132\031.google.pr"
      "otobuf.Duration\032\347\001\n\004Http\022>\n\rapi_formatte"
      "r\030\001 \001(\0162\'.go.pkg.webserver.Web.Http.ApiF"
      "ormatter\022\027\n\017max_concurrency\030\002 \001(\005\022*\n\007tim"
      "eout\030\003 \001(\0132\031.google.protobuf.Duration\"Z\n"
      "\014ApiFormatter\022\014\n\010api_noop\020\000\022\022\n\016tcloud_ap"
      "i_v30\020\001\022\023\n\017trivial_api_v10\020\002\022\023\n\017trivial_"
      "api_v20\020\003\032\265\001\n\005Debug\022\030\n\020enable_profiling\030"
      "\001 \001(\010\022&\n\036disable_print_inoutput_methods\030"
      "\002 \003(\t\022:\n\010test_map\030\003 \003(\0132(.go.pkg.webserv"
      "er.Web.Debug.TestMapEntry\032.\n\014TestMapEntr"
      "y\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\032\235\001\n\007Mo"
      "nitor\022<\n\nprometheus\030\001 \001(\0132(.go.pkg.webse"
      "rver.Web.Monitor.Prometheus\032T\n\nPrometheu"
      "s\022!\n\031enabled_metric_timer_cost\030\001 \001(\010\022#\n\033"
      "enabled_metric_code_message\030\002 \001(\010B2Z0git"
      "hub.com/kaydxh/golang/pkg/webserver;webs"
      "erverb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1213);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test/base/webserver.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_test_2fbase_2fwebserver_2eproto
namespace go {
namespace pkg {
namespace webserver {
const ::google::protobuf::EnumDescriptor* Web_Http_ApiFormatter_descriptor() {
  protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_test_2fbase_2fwebserver_2eproto::file_level_enum_descriptors[0];
}
bool Web_Http_ApiFormatter_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Web_Http_ApiFormatter Web_Http::api_noop;
const Web_Http_ApiFormatter Web_Http::tcloud_api_v30;
const Web_Http_ApiFormatter Web_Http::trivial_api_v10;
const Web_Http_ApiFormatter Web_Http::trivial_api_v20;
const Web_Http_ApiFormatter Web_Http::ApiFormatter_MIN;
const Web_Http_ApiFormatter Web_Http::ApiFormatter_MAX;
const int Web_Http::ApiFormatter_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void WebConfig::InitAsDefaultInstance() {
  ::go::pkg::webserver::_WebConfig_default_instance_._instance.get_mutable()->web_ = const_cast< ::go::pkg::webserver::Web*>(
      ::go::pkg::webserver::Web::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WebConfig::kWebFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WebConfig::WebConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_WebConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.pkg.webserver.WebConfig)
}
WebConfig::WebConfig(const WebConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_web()) {
    web_ = new ::go::pkg::webserver::Web(*from.web_);
  } else {
    web_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:go.pkg.webserver.WebConfig)
}

void WebConfig::SharedCtor() {
  web_ = NULL;
}

WebConfig::~WebConfig() {
  // @@protoc_insertion_point(destructor:go.pkg.webserver.WebConfig)
  SharedDtor();
}

void WebConfig::SharedDtor() {
  if (this != internal_default_instance()) delete web_;
}

void WebConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WebConfig::descriptor() {
  ::protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WebConfig& WebConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2fbase_2fwebserver_2eproto::scc_info_WebConfig.base);
  return *internal_default_instance();
}


void WebConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:go.pkg.webserver.WebConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && web_ != NULL) {
    delete web_;
  }
  web_ = NULL;
  _internal_metadata_.Clear();
}

bool WebConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.pkg.webserver.WebConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .go.pkg.webserver.Web web = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_web()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.pkg.webserver.WebConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.pkg.webserver.WebConfig)
  return false;
#undef DO_
}

void WebConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.pkg.webserver.WebConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .go.pkg.webserver.Web web = 1;
  if (this->has_web()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_web(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:go.pkg.webserver.WebConfig)
}

::google::protobuf::uint8* WebConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:go.pkg.webserver.WebConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .go.pkg.webserver.Web web = 1;
  if (this->has_web()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_web(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.pkg.webserver.WebConfig)
  return target;
}

size_t WebConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.pkg.webserver.WebConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .go.pkg.webserver.Web web = 1;
  if (this->has_web()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *web_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WebConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.pkg.webserver.WebConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const WebConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WebConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.pkg.webserver.WebConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.pkg.webserver.WebConfig)
    MergeFrom(*source);
  }
}

void WebConfig::MergeFrom(const WebConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.pkg.webserver.WebConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_web()) {
    mutable_web()->::go::pkg::webserver::Web::MergeFrom(from.web());
  }
}

void WebConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.pkg.webserver.WebConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WebConfig::CopyFrom(const WebConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.pkg.webserver.WebConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WebConfig::IsInitialized() const {
  return true;
}

void WebConfig::Swap(WebConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WebConfig::InternalSwap(WebConfig* other) {
  using std::swap;
  swap(web_, other->web_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WebConfig::GetMetadata() const {
  protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Web_Net::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Web_Net::kHostFieldNumber;
const int Web_Net::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Web_Net::Web_Net()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Net.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.pkg.webserver.Web.Net)
}
Web_Net::Web_Net(const Web_Net& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host().size() > 0) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:go.pkg.webserver.Web.Net)
}

void Web_Net::SharedCtor() {
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

Web_Net::~Web_Net() {
  // @@protoc_insertion_point(destructor:go.pkg.webserver.Web.Net)
  SharedDtor();
}

void Web_Net::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Web_Net::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Web_Net::descriptor() {
  ::protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Web_Net& Web_Net::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Net.base);
  return *internal_default_instance();
}


void Web_Net::Clear() {
// @@protoc_insertion_point(message_clear_start:go.pkg.webserver.Web.Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  _internal_metadata_.Clear();
}

bool Web_Net::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.pkg.webserver.Web.Net)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string host = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.pkg.webserver.Web.Net.host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.pkg.webserver.Web.Net)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.pkg.webserver.Web.Net)
  return false;
#undef DO_
}

void Web_Net::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.pkg.webserver.Web.Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.pkg.webserver.Web.Net.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host(), output);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:go.pkg.webserver.Web.Net)
}

::google::protobuf::uint8* Web_Net::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:go.pkg.webserver.Web.Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.pkg.webserver.Web.Net.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.pkg.webserver.Web.Net)
  return target;
}

size_t Web_Net::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.pkg.webserver.Web.Net)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string host = 1;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Web_Net::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.pkg.webserver.Web.Net)
  GOOGLE_DCHECK_NE(&from, this);
  const Web_Net* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Web_Net>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.pkg.webserver.Web.Net)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.pkg.webserver.Web.Net)
    MergeFrom(*source);
  }
}

void Web_Net::MergeFrom(const Web_Net& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.pkg.webserver.Web.Net)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void Web_Net::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.pkg.webserver.Web.Net)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Web_Net::CopyFrom(const Web_Net& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.pkg.webserver.Web.Net)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Web_Net::IsInitialized() const {
  return true;
}

void Web_Net::Swap(Web_Net* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Web_Net::InternalSwap(Web_Net* other) {
  using std::swap;
  host_.Swap(&other->host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Web_Net::GetMetadata() const {
  protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Web_Grpc::InitAsDefaultInstance() {
  ::go::pkg::webserver::_Web_Grpc_default_instance_._instance.get_mutable()->timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void Web_Grpc::clear_timeout() {
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) {
    delete timeout_;
  }
  timeout_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Web_Grpc::kMaxConcurrencyUnaryFieldNumber;
const int Web_Grpc::kMaxConcurrencyStreamFieldNumber;
const int Web_Grpc::kMaxReceiveMessageSizeFieldNumber;
const int Web_Grpc::kMaxSendMessageSizeFieldNumber;
const int Web_Grpc::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Web_Grpc::Web_Grpc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Grpc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.pkg.webserver.Web.Grpc)
}
Web_Grpc::Web_Grpc(const Web_Grpc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timeout()) {
    timeout_ = new ::google::protobuf::Duration(*from.timeout_);
  } else {
    timeout_ = NULL;
  }
  ::memcpy(&max_concurrency_unary_, &from.max_concurrency_unary_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_send_message_size_) -
    reinterpret_cast<char*>(&max_concurrency_unary_)) + sizeof(max_send_message_size_));
  // @@protoc_insertion_point(copy_constructor:go.pkg.webserver.Web.Grpc)
}

void Web_Grpc::SharedCtor() {
  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_send_message_size_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(max_send_message_size_));
}

Web_Grpc::~Web_Grpc() {
  // @@protoc_insertion_point(destructor:go.pkg.webserver.Web.Grpc)
  SharedDtor();
}

void Web_Grpc::SharedDtor() {
  if (this != internal_default_instance()) delete timeout_;
}

void Web_Grpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Web_Grpc::descriptor() {
  ::protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Web_Grpc& Web_Grpc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Grpc.base);
  return *internal_default_instance();
}


void Web_Grpc::Clear() {
// @@protoc_insertion_point(message_clear_start:go.pkg.webserver.Web.Grpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) {
    delete timeout_;
  }
  timeout_ = NULL;
  ::memset(&max_concurrency_unary_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_send_message_size_) -
      reinterpret_cast<char*>(&max_concurrency_unary_)) + sizeof(max_send_message_size_));
  _internal_metadata_.Clear();
}

bool Web_Grpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.pkg.webserver.Web.Grpc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 max_concurrency_unary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_concurrency_unary_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_concurrency_stream = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_concurrency_stream_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_receive_message_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_receive_message_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_send_message_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_send_message_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration timeout = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.pkg.webserver.Web.Grpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.pkg.webserver.Web.Grpc)
  return false;
#undef DO_
}

void Web_Grpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.pkg.webserver.Web.Grpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 max_concurrency_unary = 1;
  if (this->max_concurrency_unary() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->max_concurrency_unary(), output);
  }

  // int32 max_concurrency_stream = 2;
  if (this->max_concurrency_stream() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_concurrency_stream(), output);
  }

  // int32 max_receive_message_size = 3;
  if (this->max_receive_message_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_receive_message_size(), output);
  }

  // int32 max_send_message_size = 4;
  if (this->max_send_message_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_send_message_size(), output);
  }

  // .google.protobuf.Duration timeout = 5;
  if (this->has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_timeout(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:go.pkg.webserver.Web.Grpc)
}

::google::protobuf::uint8* Web_Grpc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:go.pkg.webserver.Web.Grpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 max_concurrency_unary = 1;
  if (this->max_concurrency_unary() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->max_concurrency_unary(), target);
  }

  // int32 max_concurrency_stream = 2;
  if (this->max_concurrency_stream() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_concurrency_stream(), target);
  }

  // int32 max_receive_message_size = 3;
  if (this->max_receive_message_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_receive_message_size(), target);
  }

  // int32 max_send_message_size = 4;
  if (this->max_send_message_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_send_message_size(), target);
  }

  // .google.protobuf.Duration timeout = 5;
  if (this->has_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_timeout(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.pkg.webserver.Web.Grpc)
  return target;
}

size_t Web_Grpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.pkg.webserver.Web.Grpc)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Duration timeout = 5;
  if (this->has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timeout_);
  }

  // int32 max_concurrency_unary = 1;
  if (this->max_concurrency_unary() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_concurrency_unary());
  }

  // int32 max_concurrency_stream = 2;
  if (this->max_concurrency_stream() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_concurrency_stream());
  }

  // int32 max_receive_message_size = 3;
  if (this->max_receive_message_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_receive_message_size());
  }

  // int32 max_send_message_size = 4;
  if (this->max_send_message_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_send_message_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Web_Grpc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.pkg.webserver.Web.Grpc)
  GOOGLE_DCHECK_NE(&from, this);
  const Web_Grpc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Web_Grpc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.pkg.webserver.Web.Grpc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.pkg.webserver.Web.Grpc)
    MergeFrom(*source);
  }
}

void Web_Grpc::MergeFrom(const Web_Grpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.pkg.webserver.Web.Grpc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timeout()) {
    mutable_timeout()->::google::protobuf::Duration::MergeFrom(from.timeout());
  }
  if (from.max_concurrency_unary() != 0) {
    set_max_concurrency_unary(from.max_concurrency_unary());
  }
  if (from.max_concurrency_stream() != 0) {
    set_max_concurrency_stream(from.max_concurrency_stream());
  }
  if (from.max_receive_message_size() != 0) {
    set_max_receive_message_size(from.max_receive_message_size());
  }
  if (from.max_send_message_size() != 0) {
    set_max_send_message_size(from.max_send_message_size());
  }
}

void Web_Grpc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.pkg.webserver.Web.Grpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Web_Grpc::CopyFrom(const Web_Grpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.pkg.webserver.Web.Grpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Web_Grpc::IsInitialized() const {
  return true;
}

void Web_Grpc::Swap(Web_Grpc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Web_Grpc::InternalSwap(Web_Grpc* other) {
  using std::swap;
  swap(timeout_, other->timeout_);
  swap(max_concurrency_unary_, other->max_concurrency_unary_);
  swap(max_concurrency_stream_, other->max_concurrency_stream_);
  swap(max_receive_message_size_, other->max_receive_message_size_);
  swap(max_send_message_size_, other->max_send_message_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Web_Grpc::GetMetadata() const {
  protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Web_Http::InitAsDefaultInstance() {
  ::go::pkg::webserver::_Web_Http_default_instance_._instance.get_mutable()->timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void Web_Http::clear_timeout() {
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) {
    delete timeout_;
  }
  timeout_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Web_Http::kApiFormatterFieldNumber;
const int Web_Http::kMaxConcurrencyFieldNumber;
const int Web_Http::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Web_Http::Web_Http()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Http.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.pkg.webserver.Web.Http)
}
Web_Http::Web_Http(const Web_Http& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timeout()) {
    timeout_ = new ::google::protobuf::Duration(*from.timeout_);
  } else {
    timeout_ = NULL;
  }
  ::memcpy(&api_formatter_, &from.api_formatter_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_concurrency_) -
    reinterpret_cast<char*>(&api_formatter_)) + sizeof(max_concurrency_));
  // @@protoc_insertion_point(copy_constructor:go.pkg.webserver.Web.Http)
}

void Web_Http::SharedCtor() {
  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_concurrency_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(max_concurrency_));
}

Web_Http::~Web_Http() {
  // @@protoc_insertion_point(destructor:go.pkg.webserver.Web.Http)
  SharedDtor();
}

void Web_Http::SharedDtor() {
  if (this != internal_default_instance()) delete timeout_;
}

void Web_Http::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Web_Http::descriptor() {
  ::protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Web_Http& Web_Http::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Http.base);
  return *internal_default_instance();
}


void Web_Http::Clear() {
// @@protoc_insertion_point(message_clear_start:go.pkg.webserver.Web.Http)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) {
    delete timeout_;
  }
  timeout_ = NULL;
  ::memset(&api_formatter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_concurrency_) -
      reinterpret_cast<char*>(&api_formatter_)) + sizeof(max_concurrency_));
  _internal_metadata_.Clear();
}

bool Web_Http::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.pkg.webserver.Web.Http)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .go.pkg.webserver.Web.Http.ApiFormatter api_formatter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_api_formatter(static_cast< ::go::pkg::webserver::Web_Http_ApiFormatter >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_concurrency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_concurrency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration timeout = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.pkg.webserver.Web.Http)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.pkg.webserver.Web.Http)
  return false;
#undef DO_
}

void Web_Http::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.pkg.webserver.Web.Http)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .go.pkg.webserver.Web.Http.ApiFormatter api_formatter = 1;
  if (this->api_formatter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->api_formatter(), output);
  }

  // int32 max_concurrency = 2;
  if (this->max_concurrency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_concurrency(), output);
  }

  // .google.protobuf.Duration timeout = 3;
  if (this->has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_timeout(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:go.pkg.webserver.Web.Http)
}

::google::protobuf::uint8* Web_Http::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:go.pkg.webserver.Web.Http)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .go.pkg.webserver.Web.Http.ApiFormatter api_formatter = 1;
  if (this->api_formatter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->api_formatter(), target);
  }

  // int32 max_concurrency = 2;
  if (this->max_concurrency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_concurrency(), target);
  }

  // .google.protobuf.Duration timeout = 3;
  if (this->has_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_timeout(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.pkg.webserver.Web.Http)
  return target;
}

size_t Web_Http::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.pkg.webserver.Web.Http)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Duration timeout = 3;
  if (this->has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timeout_);
  }

  // .go.pkg.webserver.Web.Http.ApiFormatter api_formatter = 1;
  if (this->api_formatter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->api_formatter());
  }

  // int32 max_concurrency = 2;
  if (this->max_concurrency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_concurrency());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Web_Http::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.pkg.webserver.Web.Http)
  GOOGLE_DCHECK_NE(&from, this);
  const Web_Http* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Web_Http>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.pkg.webserver.Web.Http)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.pkg.webserver.Web.Http)
    MergeFrom(*source);
  }
}

void Web_Http::MergeFrom(const Web_Http& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.pkg.webserver.Web.Http)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timeout()) {
    mutable_timeout()->::google::protobuf::Duration::MergeFrom(from.timeout());
  }
  if (from.api_formatter() != 0) {
    set_api_formatter(from.api_formatter());
  }
  if (from.max_concurrency() != 0) {
    set_max_concurrency(from.max_concurrency());
  }
}

void Web_Http::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.pkg.webserver.Web.Http)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Web_Http::CopyFrom(const Web_Http& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.pkg.webserver.Web.Http)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Web_Http::IsInitialized() const {
  return true;
}

void Web_Http::Swap(Web_Http* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Web_Http::InternalSwap(Web_Http* other) {
  using std::swap;
  swap(timeout_, other->timeout_);
  swap(api_formatter_, other->api_formatter_);
  swap(max_concurrency_, other->max_concurrency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Web_Http::GetMetadata() const {
  protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Web_Debug_TestMapEntry_DoNotUse::Web_Debug_TestMapEntry_DoNotUse() {}
Web_Debug_TestMapEntry_DoNotUse::Web_Debug_TestMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Web_Debug_TestMapEntry_DoNotUse::MergeFrom(const Web_Debug_TestMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Web_Debug_TestMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[4];
}
void Web_Debug_TestMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Web_Debug::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Web_Debug::kEnableProfilingFieldNumber;
const int Web_Debug::kDisablePrintInoutputMethodsFieldNumber;
const int Web_Debug::kTestMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Web_Debug::Web_Debug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Debug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.pkg.webserver.Web.Debug)
}
Web_Debug::Web_Debug(const Web_Debug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      disable_print_inoutput_methods_(from.disable_print_inoutput_methods_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  test_map_.MergeFrom(from.test_map_);
  enable_profiling_ = from.enable_profiling_;
  // @@protoc_insertion_point(copy_constructor:go.pkg.webserver.Web.Debug)
}

void Web_Debug::SharedCtor() {
  enable_profiling_ = false;
}

Web_Debug::~Web_Debug() {
  // @@protoc_insertion_point(destructor:go.pkg.webserver.Web.Debug)
  SharedDtor();
}

void Web_Debug::SharedDtor() {
}

void Web_Debug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Web_Debug::descriptor() {
  ::protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Web_Debug& Web_Debug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Debug.base);
  return *internal_default_instance();
}


void Web_Debug::Clear() {
// @@protoc_insertion_point(message_clear_start:go.pkg.webserver.Web.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disable_print_inoutput_methods_.Clear();
  test_map_.Clear();
  enable_profiling_ = false;
  _internal_metadata_.Clear();
}

bool Web_Debug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.pkg.webserver.Web.Debug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enable_profiling = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_profiling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string disable_print_inoutput_methods = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_disable_print_inoutput_methods()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->disable_print_inoutput_methods(this->disable_print_inoutput_methods_size() - 1).data(),
            static_cast<int>(this->disable_print_inoutput_methods(this->disable_print_inoutput_methods_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.pkg.webserver.Web.Debug.disable_print_inoutput_methods"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, int32> test_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          Web_Debug_TestMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Web_Debug_TestMapEntry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&test_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.pkg.webserver.Web.Debug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.pkg.webserver.Web.Debug)
  return false;
#undef DO_
}

void Web_Debug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.pkg.webserver.Web.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable_profiling = 1;
  if (this->enable_profiling() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enable_profiling(), output);
  }

  // repeated string disable_print_inoutput_methods = 2;
  for (int i = 0, n = this->disable_print_inoutput_methods_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disable_print_inoutput_methods(i).data(), static_cast<int>(this->disable_print_inoutput_methods(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.pkg.webserver.Web.Debug.disable_print_inoutput_methods");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->disable_print_inoutput_methods(i), output);
  }

  // map<int32, int32> test_map = 3;
  if (!this->test_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->test_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->test_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->test_map().begin();
          it != this->test_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Web_Debug_TestMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(test_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::std::unique_ptr<Web_Debug_TestMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->test_map().begin();
          it != this->test_map().end(); ++it) {
        entry.reset(test_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:go.pkg.webserver.Web.Debug)
}

::google::protobuf::uint8* Web_Debug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:go.pkg.webserver.Web.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable_profiling = 1;
  if (this->enable_profiling() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enable_profiling(), target);
  }

  // repeated string disable_print_inoutput_methods = 2;
  for (int i = 0, n = this->disable_print_inoutput_methods_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->disable_print_inoutput_methods(i).data(), static_cast<int>(this->disable_print_inoutput_methods(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.pkg.webserver.Web.Debug.disable_print_inoutput_methods");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->disable_print_inoutput_methods(i), target);
  }

  // map<int32, int32> test_map = 3;
  if (!this->test_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->test_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->test_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->test_map().begin();
          it != this->test_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Web_Debug_TestMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(test_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<Web_Debug_TestMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->test_map().begin();
          it != this->test_map().end(); ++it) {
        entry.reset(test_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.pkg.webserver.Web.Debug)
  return target;
}

size_t Web_Debug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.pkg.webserver.Web.Debug)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string disable_print_inoutput_methods = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->disable_print_inoutput_methods_size());
  for (int i = 0, n = this->disable_print_inoutput_methods_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->disable_print_inoutput_methods(i));
  }

  // map<int32, int32> test_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->test_map_size());
  {
    ::std::unique_ptr<Web_Debug_TestMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->test_map().begin();
        it != this->test_map().end(); ++it) {
      entry.reset(test_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bool enable_profiling = 1;
  if (this->enable_profiling() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Web_Debug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.pkg.webserver.Web.Debug)
  GOOGLE_DCHECK_NE(&from, this);
  const Web_Debug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Web_Debug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.pkg.webserver.Web.Debug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.pkg.webserver.Web.Debug)
    MergeFrom(*source);
  }
}

void Web_Debug::MergeFrom(const Web_Debug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.pkg.webserver.Web.Debug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  disable_print_inoutput_methods_.MergeFrom(from.disable_print_inoutput_methods_);
  test_map_.MergeFrom(from.test_map_);
  if (from.enable_profiling() != 0) {
    set_enable_profiling(from.enable_profiling());
  }
}

void Web_Debug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.pkg.webserver.Web.Debug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Web_Debug::CopyFrom(const Web_Debug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.pkg.webserver.Web.Debug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Web_Debug::IsInitialized() const {
  return true;
}

void Web_Debug::Swap(Web_Debug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Web_Debug::InternalSwap(Web_Debug* other) {
  using std::swap;
  disable_print_inoutput_methods_.InternalSwap(CastToBase(&other->disable_print_inoutput_methods_));
  test_map_.Swap(&other->test_map_);
  swap(enable_profiling_, other->enable_profiling_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Web_Debug::GetMetadata() const {
  protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Web_Monitor_Prometheus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Web_Monitor_Prometheus::kEnabledMetricTimerCostFieldNumber;
const int Web_Monitor_Prometheus::kEnabledMetricCodeMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Web_Monitor_Prometheus::Web_Monitor_Prometheus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Monitor_Prometheus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.pkg.webserver.Web.Monitor.Prometheus)
}
Web_Monitor_Prometheus::Web_Monitor_Prometheus(const Web_Monitor_Prometheus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&enabled_metric_timer_cost_, &from.enabled_metric_timer_cost_,
    static_cast<size_t>(reinterpret_cast<char*>(&enabled_metric_code_message_) -
    reinterpret_cast<char*>(&enabled_metric_timer_cost_)) + sizeof(enabled_metric_code_message_));
  // @@protoc_insertion_point(copy_constructor:go.pkg.webserver.Web.Monitor.Prometheus)
}

void Web_Monitor_Prometheus::SharedCtor() {
  ::memset(&enabled_metric_timer_cost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enabled_metric_code_message_) -
      reinterpret_cast<char*>(&enabled_metric_timer_cost_)) + sizeof(enabled_metric_code_message_));
}

Web_Monitor_Prometheus::~Web_Monitor_Prometheus() {
  // @@protoc_insertion_point(destructor:go.pkg.webserver.Web.Monitor.Prometheus)
  SharedDtor();
}

void Web_Monitor_Prometheus::SharedDtor() {
}

void Web_Monitor_Prometheus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Web_Monitor_Prometheus::descriptor() {
  ::protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Web_Monitor_Prometheus& Web_Monitor_Prometheus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Monitor_Prometheus.base);
  return *internal_default_instance();
}


void Web_Monitor_Prometheus::Clear() {
// @@protoc_insertion_point(message_clear_start:go.pkg.webserver.Web.Monitor.Prometheus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&enabled_metric_timer_cost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enabled_metric_code_message_) -
      reinterpret_cast<char*>(&enabled_metric_timer_cost_)) + sizeof(enabled_metric_code_message_));
  _internal_metadata_.Clear();
}

bool Web_Monitor_Prometheus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.pkg.webserver.Web.Monitor.Prometheus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled_metric_timer_cost = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_metric_timer_cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enabled_metric_code_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_metric_code_message_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.pkg.webserver.Web.Monitor.Prometheus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.pkg.webserver.Web.Monitor.Prometheus)
  return false;
#undef DO_
}

void Web_Monitor_Prometheus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.pkg.webserver.Web.Monitor.Prometheus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled_metric_timer_cost = 1;
  if (this->enabled_metric_timer_cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled_metric_timer_cost(), output);
  }

  // bool enabled_metric_code_message = 2;
  if (this->enabled_metric_code_message() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enabled_metric_code_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:go.pkg.webserver.Web.Monitor.Prometheus)
}

::google::protobuf::uint8* Web_Monitor_Prometheus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:go.pkg.webserver.Web.Monitor.Prometheus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled_metric_timer_cost = 1;
  if (this->enabled_metric_timer_cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled_metric_timer_cost(), target);
  }

  // bool enabled_metric_code_message = 2;
  if (this->enabled_metric_code_message() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enabled_metric_code_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.pkg.webserver.Web.Monitor.Prometheus)
  return target;
}

size_t Web_Monitor_Prometheus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.pkg.webserver.Web.Monitor.Prometheus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool enabled_metric_timer_cost = 1;
  if (this->enabled_metric_timer_cost() != 0) {
    total_size += 1 + 1;
  }

  // bool enabled_metric_code_message = 2;
  if (this->enabled_metric_code_message() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Web_Monitor_Prometheus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.pkg.webserver.Web.Monitor.Prometheus)
  GOOGLE_DCHECK_NE(&from, this);
  const Web_Monitor_Prometheus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Web_Monitor_Prometheus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.pkg.webserver.Web.Monitor.Prometheus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.pkg.webserver.Web.Monitor.Prometheus)
    MergeFrom(*source);
  }
}

void Web_Monitor_Prometheus::MergeFrom(const Web_Monitor_Prometheus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.pkg.webserver.Web.Monitor.Prometheus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled_metric_timer_cost() != 0) {
    set_enabled_metric_timer_cost(from.enabled_metric_timer_cost());
  }
  if (from.enabled_metric_code_message() != 0) {
    set_enabled_metric_code_message(from.enabled_metric_code_message());
  }
}

void Web_Monitor_Prometheus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.pkg.webserver.Web.Monitor.Prometheus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Web_Monitor_Prometheus::CopyFrom(const Web_Monitor_Prometheus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.pkg.webserver.Web.Monitor.Prometheus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Web_Monitor_Prometheus::IsInitialized() const {
  return true;
}

void Web_Monitor_Prometheus::Swap(Web_Monitor_Prometheus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Web_Monitor_Prometheus::InternalSwap(Web_Monitor_Prometheus* other) {
  using std::swap;
  swap(enabled_metric_timer_cost_, other->enabled_metric_timer_cost_);
  swap(enabled_metric_code_message_, other->enabled_metric_code_message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Web_Monitor_Prometheus::GetMetadata() const {
  protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Web_Monitor::InitAsDefaultInstance() {
  ::go::pkg::webserver::_Web_Monitor_default_instance_._instance.get_mutable()->prometheus_ = const_cast< ::go::pkg::webserver::Web_Monitor_Prometheus*>(
      ::go::pkg::webserver::Web_Monitor_Prometheus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Web_Monitor::kPrometheusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Web_Monitor::Web_Monitor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Monitor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.pkg.webserver.Web.Monitor)
}
Web_Monitor::Web_Monitor(const Web_Monitor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_prometheus()) {
    prometheus_ = new ::go::pkg::webserver::Web_Monitor_Prometheus(*from.prometheus_);
  } else {
    prometheus_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:go.pkg.webserver.Web.Monitor)
}

void Web_Monitor::SharedCtor() {
  prometheus_ = NULL;
}

Web_Monitor::~Web_Monitor() {
  // @@protoc_insertion_point(destructor:go.pkg.webserver.Web.Monitor)
  SharedDtor();
}

void Web_Monitor::SharedDtor() {
  if (this != internal_default_instance()) delete prometheus_;
}

void Web_Monitor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Web_Monitor::descriptor() {
  ::protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Web_Monitor& Web_Monitor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web_Monitor.base);
  return *internal_default_instance();
}


void Web_Monitor::Clear() {
// @@protoc_insertion_point(message_clear_start:go.pkg.webserver.Web.Monitor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && prometheus_ != NULL) {
    delete prometheus_;
  }
  prometheus_ = NULL;
  _internal_metadata_.Clear();
}

bool Web_Monitor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.pkg.webserver.Web.Monitor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .go.pkg.webserver.Web.Monitor.Prometheus prometheus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prometheus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.pkg.webserver.Web.Monitor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.pkg.webserver.Web.Monitor)
  return false;
#undef DO_
}

void Web_Monitor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.pkg.webserver.Web.Monitor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .go.pkg.webserver.Web.Monitor.Prometheus prometheus = 1;
  if (this->has_prometheus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_prometheus(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:go.pkg.webserver.Web.Monitor)
}

::google::protobuf::uint8* Web_Monitor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:go.pkg.webserver.Web.Monitor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .go.pkg.webserver.Web.Monitor.Prometheus prometheus = 1;
  if (this->has_prometheus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_prometheus(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.pkg.webserver.Web.Monitor)
  return target;
}

size_t Web_Monitor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.pkg.webserver.Web.Monitor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .go.pkg.webserver.Web.Monitor.Prometheus prometheus = 1;
  if (this->has_prometheus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prometheus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Web_Monitor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.pkg.webserver.Web.Monitor)
  GOOGLE_DCHECK_NE(&from, this);
  const Web_Monitor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Web_Monitor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.pkg.webserver.Web.Monitor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.pkg.webserver.Web.Monitor)
    MergeFrom(*source);
  }
}

void Web_Monitor::MergeFrom(const Web_Monitor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.pkg.webserver.Web.Monitor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_prometheus()) {
    mutable_prometheus()->::go::pkg::webserver::Web_Monitor_Prometheus::MergeFrom(from.prometheus());
  }
}

void Web_Monitor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.pkg.webserver.Web.Monitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Web_Monitor::CopyFrom(const Web_Monitor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.pkg.webserver.Web.Monitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Web_Monitor::IsInitialized() const {
  return true;
}

void Web_Monitor::Swap(Web_Monitor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Web_Monitor::InternalSwap(Web_Monitor* other) {
  using std::swap;
  swap(prometheus_, other->prometheus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Web_Monitor::GetMetadata() const {
  protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Web::InitAsDefaultInstance() {
  ::go::pkg::webserver::_Web_default_instance_._instance.get_mutable()->bind_address_ = const_cast< ::go::pkg::webserver::Web_Net*>(
      ::go::pkg::webserver::Web_Net::internal_default_instance());
  ::go::pkg::webserver::_Web_default_instance_._instance.get_mutable()->grpc_ = const_cast< ::go::pkg::webserver::Web_Grpc*>(
      ::go::pkg::webserver::Web_Grpc::internal_default_instance());
  ::go::pkg::webserver::_Web_default_instance_._instance.get_mutable()->http_ = const_cast< ::go::pkg::webserver::Web_Http*>(
      ::go::pkg::webserver::Web_Http::internal_default_instance());
  ::go::pkg::webserver::_Web_default_instance_._instance.get_mutable()->debug_ = const_cast< ::go::pkg::webserver::Web_Debug*>(
      ::go::pkg::webserver::Web_Debug::internal_default_instance());
  ::go::pkg::webserver::_Web_default_instance_._instance.get_mutable()->monitor_ = const_cast< ::go::pkg::webserver::Web_Monitor*>(
      ::go::pkg::webserver::Web_Monitor::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Web::kBindAddressFieldNumber;
const int Web::kGrpcFieldNumber;
const int Web::kHttpFieldNumber;
const int Web::kDebugFieldNumber;
const int Web::kMonitorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Web::Web()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.pkg.webserver.Web)
}
Web::Web(const Web& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bind_address()) {
    bind_address_ = new ::go::pkg::webserver::Web_Net(*from.bind_address_);
  } else {
    bind_address_ = NULL;
  }
  if (from.has_grpc()) {
    grpc_ = new ::go::pkg::webserver::Web_Grpc(*from.grpc_);
  } else {
    grpc_ = NULL;
  }
  if (from.has_http()) {
    http_ = new ::go::pkg::webserver::Web_Http(*from.http_);
  } else {
    http_ = NULL;
  }
  if (from.has_debug()) {
    debug_ = new ::go::pkg::webserver::Web_Debug(*from.debug_);
  } else {
    debug_ = NULL;
  }
  if (from.has_monitor()) {
    monitor_ = new ::go::pkg::webserver::Web_Monitor(*from.monitor_);
  } else {
    monitor_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:go.pkg.webserver.Web)
}

void Web::SharedCtor() {
  ::memset(&bind_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&monitor_) -
      reinterpret_cast<char*>(&bind_address_)) + sizeof(monitor_));
}

Web::~Web() {
  // @@protoc_insertion_point(destructor:go.pkg.webserver.Web)
  SharedDtor();
}

void Web::SharedDtor() {
  if (this != internal_default_instance()) delete bind_address_;
  if (this != internal_default_instance()) delete grpc_;
  if (this != internal_default_instance()) delete http_;
  if (this != internal_default_instance()) delete debug_;
  if (this != internal_default_instance()) delete monitor_;
}

void Web::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Web::descriptor() {
  ::protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Web& Web::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_test_2fbase_2fwebserver_2eproto::scc_info_Web.base);
  return *internal_default_instance();
}


void Web::Clear() {
// @@protoc_insertion_point(message_clear_start:go.pkg.webserver.Web)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bind_address_ != NULL) {
    delete bind_address_;
  }
  bind_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && grpc_ != NULL) {
    delete grpc_;
  }
  grpc_ = NULL;
  if (GetArenaNoVirtual() == NULL && http_ != NULL) {
    delete http_;
  }
  http_ = NULL;
  if (GetArenaNoVirtual() == NULL && debug_ != NULL) {
    delete debug_;
  }
  debug_ = NULL;
  if (GetArenaNoVirtual() == NULL && monitor_ != NULL) {
    delete monitor_;
  }
  monitor_ = NULL;
  _internal_metadata_.Clear();
}

bool Web::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.pkg.webserver.Web)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .go.pkg.webserver.Web.Net bind_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bind_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .go.pkg.webserver.Web.Grpc grpc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_grpc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .go.pkg.webserver.Web.Http http = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_http()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .go.pkg.webserver.Web.Debug debug = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debug()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .go.pkg.webserver.Web.Monitor monitor = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_monitor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.pkg.webserver.Web)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.pkg.webserver.Web)
  return false;
#undef DO_
}

void Web::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.pkg.webserver.Web)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .go.pkg.webserver.Web.Net bind_address = 1;
  if (this->has_bind_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_bind_address(), output);
  }

  // .go.pkg.webserver.Web.Grpc grpc = 3;
  if (this->has_grpc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_grpc(), output);
  }

  // .go.pkg.webserver.Web.Http http = 4;
  if (this->has_http()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_http(), output);
  }

  // .go.pkg.webserver.Web.Debug debug = 10;
  if (this->has_debug()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_debug(), output);
  }

  // .go.pkg.webserver.Web.Monitor monitor = 11;
  if (this->has_monitor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_monitor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:go.pkg.webserver.Web)
}

::google::protobuf::uint8* Web::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:go.pkg.webserver.Web)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .go.pkg.webserver.Web.Net bind_address = 1;
  if (this->has_bind_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_bind_address(), deterministic, target);
  }

  // .go.pkg.webserver.Web.Grpc grpc = 3;
  if (this->has_grpc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_grpc(), deterministic, target);
  }

  // .go.pkg.webserver.Web.Http http = 4;
  if (this->has_http()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_http(), deterministic, target);
  }

  // .go.pkg.webserver.Web.Debug debug = 10;
  if (this->has_debug()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_debug(), deterministic, target);
  }

  // .go.pkg.webserver.Web.Monitor monitor = 11;
  if (this->has_monitor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_monitor(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.pkg.webserver.Web)
  return target;
}

size_t Web::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.pkg.webserver.Web)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .go.pkg.webserver.Web.Net bind_address = 1;
  if (this->has_bind_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bind_address_);
  }

  // .go.pkg.webserver.Web.Grpc grpc = 3;
  if (this->has_grpc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *grpc_);
  }

  // .go.pkg.webserver.Web.Http http = 4;
  if (this->has_http()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *http_);
  }

  // .go.pkg.webserver.Web.Debug debug = 10;
  if (this->has_debug()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *debug_);
  }

  // .go.pkg.webserver.Web.Monitor monitor = 11;
  if (this->has_monitor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *monitor_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Web::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.pkg.webserver.Web)
  GOOGLE_DCHECK_NE(&from, this);
  const Web* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Web>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.pkg.webserver.Web)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.pkg.webserver.Web)
    MergeFrom(*source);
  }
}

void Web::MergeFrom(const Web& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.pkg.webserver.Web)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bind_address()) {
    mutable_bind_address()->::go::pkg::webserver::Web_Net::MergeFrom(from.bind_address());
  }
  if (from.has_grpc()) {
    mutable_grpc()->::go::pkg::webserver::Web_Grpc::MergeFrom(from.grpc());
  }
  if (from.has_http()) {
    mutable_http()->::go::pkg::webserver::Web_Http::MergeFrom(from.http());
  }
  if (from.has_debug()) {
    mutable_debug()->::go::pkg::webserver::Web_Debug::MergeFrom(from.debug());
  }
  if (from.has_monitor()) {
    mutable_monitor()->::go::pkg::webserver::Web_Monitor::MergeFrom(from.monitor());
  }
}

void Web::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.pkg.webserver.Web)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Web::CopyFrom(const Web& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.pkg.webserver.Web)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Web::IsInitialized() const {
  return true;
}

void Web::Swap(Web* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Web::InternalSwap(Web* other) {
  using std::swap;
  swap(bind_address_, other->bind_address_);
  swap(grpc_, other->grpc_);
  swap(http_, other->http_);
  swap(debug_, other->debug_);
  swap(monitor_, other->monitor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Web::GetMetadata() const {
  protobuf_test_2fbase_2fwebserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_test_2fbase_2fwebserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace webserver
}  // namespace pkg
}  // namespace go
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::go::pkg::webserver::WebConfig* Arena::CreateMaybeMessage< ::go::pkg::webserver::WebConfig >(Arena* arena) {
  return Arena::CreateInternal< ::go::pkg::webserver::WebConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::go::pkg::webserver::Web_Net* Arena::CreateMaybeMessage< ::go::pkg::webserver::Web_Net >(Arena* arena) {
  return Arena::CreateInternal< ::go::pkg::webserver::Web_Net >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::go::pkg::webserver::Web_Grpc* Arena::CreateMaybeMessage< ::go::pkg::webserver::Web_Grpc >(Arena* arena) {
  return Arena::CreateInternal< ::go::pkg::webserver::Web_Grpc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::go::pkg::webserver::Web_Http* Arena::CreateMaybeMessage< ::go::pkg::webserver::Web_Http >(Arena* arena) {
  return Arena::CreateInternal< ::go::pkg::webserver::Web_Http >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::go::pkg::webserver::Web_Debug_TestMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::go::pkg::webserver::Web_Debug_TestMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::go::pkg::webserver::Web_Debug_TestMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::go::pkg::webserver::Web_Debug* Arena::CreateMaybeMessage< ::go::pkg::webserver::Web_Debug >(Arena* arena) {
  return Arena::CreateInternal< ::go::pkg::webserver::Web_Debug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::go::pkg::webserver::Web_Monitor_Prometheus* Arena::CreateMaybeMessage< ::go::pkg::webserver::Web_Monitor_Prometheus >(Arena* arena) {
  return Arena::CreateInternal< ::go::pkg::webserver::Web_Monitor_Prometheus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::go::pkg::webserver::Web_Monitor* Arena::CreateMaybeMessage< ::go::pkg::webserver::Web_Monitor >(Arena* arena) {
  return Arena::CreateInternal< ::go::pkg::webserver::Web_Monitor >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::go::pkg::webserver::Web* Arena::CreateMaybeMessage< ::go::pkg::webserver::Web >(Arena* arena) {
  return Arena::CreateInternal< ::go::pkg::webserver::Web >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
