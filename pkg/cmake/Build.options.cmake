option(ENABLE_GRAPHICS_MAGICK "ENABLE_GRAPHICS_MAGICK" ON)
if (ENABLE_GRAPHICS_MAGICK)
  message(STATUS " > build with graphics magick lib")
  add_definitions(-DENABLE_GRAPHICS_MAGICK)
  set(MAGICK_DEPS z bz2 gomp GraphicsMagickWand GraphicsMagick++ GraphicsMagick tiff)
  include_directories(${CMAKE_CURRENT_SOURCE_DIR}/third_party/graphicsMagick_v1.3.35/include)
  link_directories(${CMAKE_CURRENT_SOURCE_DIR}/third_party/graphicsMagick_v1.3.35/lib)
endif()

option(ENABLE_OPENCV "ENABLE_OPENSSL" ON)
if (ENABLE_OPENCV)
  set(OPENCV_VERSION "2")
  message(STATUS " > build with opencv${OPENCV_VERSION} lib")
  add_definitions(-DENABLE_OPENCV)
  if (OPENCV_VERSION STREQUAL "2")
    set(OPENCV_DEPS opencv_calib3d opencv_video opencv_imgproc opencv_highgui opencv_core opencv_contrib)
    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/third_party/opencv2/include)
    link_directories(${CMAKE_CURRENT_SOURCE_DIR}/third_party/opencv2/lib)
  else()
    set(OPENCV_DEPS opencv_imgproc opencv_highgui opencv_core opencv_imgcodecs)
    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/third_party/opencv4)
  endif()
endif()

# cmake -DENABLE_CRYPTO_OPENSSL=ON ..
option(ENABLE_CRYPTO_OPENSSL "ENABLE_CRYPTO_OPENSSL" ON)
if (ENABLE_CRYPTO_OPENSSL)
  message(STATUS "> build with openssl lib")
  include_directories(${CMAKE_CURRENT_SOURCE_DIR}/third_party/openssl-v1.1.1)
  add_definitions(-DENABLE_CRYPTO_OPENSSL)
  set(OPENSSL_DEPS crypto ssl)
endif()

